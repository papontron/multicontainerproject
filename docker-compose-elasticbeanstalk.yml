#si fueramos a subir todos los servicos juntos
# version: '3.9'
# services:
#   redis:
#     image: redis
#   postgres:
#     image: postgres
#     environment:
#       - POSTGRES_PASSWORD=postgres_password
#   nginx:
#     build:
#       context: ./nginx
#       dockerfile: Dockerfile.dev
#     ports:
#       - 3050:80
#     restart: always
#     depends_on:
#       - api
#       - client
#   api:
#     build: 
#       context: ./server
#       dockerfile: Dockerfile
#     environment:
#       - REDIS_HOST=$REDIS_HOST
#       - REDIS_PORT=$REDIS_PORT
#       - PGUSER=$PGUSER
#       - PGHOST=$PGHOST
#       - PGDATABASE=$PGDATABASE
#       - PGPASSWORD=$PGPASSWORD
#       - PGPORT=$PGPORT
#     depends_on:
#       - redis
#       - postgres
#   worker:
#     build: 
#       context: ./worker
#       dockerfile: Dockerfile
#     environment:
#       - REDIS_HOST=redis
#       - REDIS_PORT=6379
#     depends_on:
#       - redis
#   client:
#     build: 
#       context: ./client
#       dockerfile: Dockerfile
#     depends_on:
#       - api

##con los servicios rds de aws y redis de aws

version: "3"
services:
  client:
    image: "papontron/multicontainerproject-client"
    mem_limit: 128m
    hostname: client
  api:
    image: "papontron/multicontainerproject-api"
    mem_limit: 128m
    hostname: api
    environment:
      - REDIS_HOST=$REDIS_HOST
      - REDIS_PORT=$REDIS_PORT
      - PGPASSWORD=$PGPASSWORD
      - PGHOST=$PGHOST
      - PGUSER=$PGUSER
      - PGDATABASE=$PGDATABASE
      - PGPORT=$PGPORT
  worker:
    image: "papontron/multicontainerproject-worker"
    mem_limit: 128m
    hostname: worker
    environment:
      - REDIS_HOST=$REDIS_HOST
      - REDIS_PORT=$REDIS_PORT
  nginx:
    image: "papontron/multicontainerproject-nginx"
    mem_limit: 128m
    hostname: nginx
    restart: always
    ports:
      - "3500:80"